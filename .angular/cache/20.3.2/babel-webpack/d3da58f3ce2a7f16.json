{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SellerDashboardComponent } from '../../seller-dashboard/seller-dashboard.component';\nlet AddProductComponent = class AddProductComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.images = [];\n    this.loading = false;\n    this.errorMsg = '';\n    this.productTypes = ['Moisturizer', 'Sunscreen', 'Serum'];\n    this.categories = ['Skin Care', 'Hair Care'];\n    this.subcategories = ['Face', 'Body', 'Hair'];\n    this.sizes = ['S', 'M', 'L', 'XL'];\n    this.colors = ['Red', 'Blue', 'Green', 'Black'];\n  }\n  ngOnInit() {\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      productType: ['', Validators.required],\n      brand: ['', Validators.required],\n      pricePerDay: ['', [Validators.required, Validators.min(0)]],\n      priceForSale: ['', [Validators.required, Validators.min(0)]],\n      discount: ['', [Validators.min(0), Validators.max(100)]],\n      expirationDate: ['', Validators.required],\n      description: ['', Validators.required],\n      stock: ['', [Validators.required, Validators.min(0)]],\n      minStock: ['', [Validators.required, Validators.min(0)]],\n      availableType: ['Sell', Validators.required],\n      size: ['', Validators.required],\n      color: ['', Validators.required],\n      category: ['', Validators.required],\n      subcategory: ['', Validators.required]\n    });\n  }\n  onAddImage(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.images.push({\n          url: e.target.result,\n          file\n        });\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  addAnotherImage() {\n    this.fileInput.nativeElement.click();\n  }\n  removeImage(index) {\n    this.images.splice(index, 1);\n  }\n  onSubmit() {\n    if (this.productForm.invalid) {\n      this.errorMsg = 'Please fill all required fields correctly.';\n      this.productForm.markAllAsTouched();\n      return;\n    }\n    this.loading = true;\n    this.errorMsg = '';\n    const formData = new FormData();\n    Object.keys(this.productForm.value).forEach(key => {\n      formData.append(key, this.productForm.value[key]);\n    });\n    this.images.forEach(img => {\n      if (img.file) formData.append('images', img.file, img.file.name);\n    });\n    // Example POST request (replace URL with your API)\n    this.http.post('/api/products', formData).pipe(finalize(() => this.loading = false)).subscribe({\n      next: res => {\n        console.log('Product added', res);\n        this.productForm.reset();\n        this.images = [];\n      },\n      error: err => {\n        console.error(err);\n        this.errorMsg = 'Failed to add product. Try again.';\n      }\n    });\n  }\n};\n__decorate([ViewChild('fileInput')], AddProductComponent.prototype, \"fileInput\", void 0);\nAddProductComponent = __decorate([Component({\n  selector: 'app-add-product',\n  standalone: true,\n  // <-- mark as standalone\n  imports: [CommonModule, ReactiveFormsModule, SellerDashboardComponent],\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss']\n})], AddProductComponent);\nexport { AddProductComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}