{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/user-service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Enter a valid email or mobile (digits only, up to 10).\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 22)(2, LoginComponent_div_9_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username.errors == null ? null : ctx_r0.username.errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username.errors == null ? null : ctx_r0.username.errors.emailOrMobile);\n  }\n}\nfunction LoginComponent_i_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 26);\n  }\n}\nfunction LoginComponent_i_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 27);\n  }\n}\nfunction LoginComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password cannot be more than 10 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, LoginComponent_div_18_div_1_Template, 2, 0, \"div\", 22)(2, LoginComponent_div_18_div_2_Template, 2, 0, \"div\", 22)(3, LoginComponent_div_18_div_3_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.password.errors == null ? null : ctx_r0.password.errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.password.errors == null ? null : ctx_r0.password.errors.minlength);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.password.errors == null ? null : ctx_r0.password.errors.maxlength);\n  }\n}\nfunction LoginComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.serverError);\n  }\n}\nfunction LoginComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Logging in...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class LoginComponent {\n    constructor(fb, userService, router) {\n      this.fb = fb;\n      this.userService = userService;\n      this.router = router;\n      this.showPassword = false;\n      this.loading = false;\n      this.serverError = null;\n    }\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required, this.emailOrMobileValidator]],\n        password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\n        rememberMe: [false]\n      });\n      // If credentials were saved (remember me), load them\n      const savedUsername = localStorage.getItem('saved_username');\n      const savedPassword = localStorage.getItem('saved_password');\n      const savedRemember = localStorage.getItem('saved_remember');\n      if (savedUsername && savedPassword && savedRemember === 'true') {\n        this.loginForm.patchValue({\n          username: savedUsername,\n          password: savedPassword,\n          rememberMe: true\n        });\n      }\n    }\n    // Custom validator: either a valid email OR a numeric mobile with up to 10 digits (and at least 6 to be reasonable)\n    emailOrMobileValidator(control) {\n      const v = (control.value || '').toString().trim();\n      if (!v) return null;\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      const mobileRegex = /^[0-9]{1,10}$/; // 1 to 10 digits allowed, will later show message if too short maybe\n      if (emailRegex.test(v)) return null;\n      if (mobileRegex.test(v)) return null;\n      return {\n        emailOrMobile: true\n      };\n    }\n    // Convenience getters\n    get username() {\n      return this.loginForm.get('username');\n    }\n    get password() {\n      return this.loginForm.get('password');\n    }\n    get rememberMe() {\n      return this.loginForm.get('rememberMe');\n    }\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    }\n    onSubmit() {\n      this.serverError = null;\n      if (this.loginForm.invalid) {\n        this.loginForm.markAllAsTouched();\n        return;\n      }\n      const credentials = {\n        username: this.username.value,\n        password: this.password.value\n      };\n      this.loading = true;\n      this.userService.login(credentials).pipe(finalize(() => this.loading = false)).subscribe({\n        next: res => {\n          // Assuming res contains data structure like { data: { token: '...', ... }, message: '...' }\n          // Save username/password/token to localStorage per user's request.\n          if (this.rememberMe.value) {\n            localStorage.setItem('saved_username', credentials.username);\n            localStorage.setItem('saved_password', credentials.password);\n            localStorage.setItem('saved_remember', 'true');\n          } else {\n            localStorage.removeItem('saved_username');\n            localStorage.removeItem('saved_password');\n            localStorage.removeItem('saved_remember');\n          }\n          // Save token if available — per your instruction token storage should be commented out for now.\n          // if (res && res.data && res.data.token) {\n          //   localStorage.setItem('auth_token', res.data.token);\n          // }\n          // For now, if backend returns user details, you can store them or navigate:\n          // localStorage.setItem('user', JSON.stringify(res.data.user));\n          // Navigate to dashboard or home after successful login\n          // this.router.navigate(['/dashboard']);\n          console.log('Login response', res);\n        },\n        error: err => {\n          console.error('Login failed', err);\n          this.serverError = err?.error?.message || err?.message || 'Login failed. Please try again.';\n        }\n      });\n    }\n    onForgotPassword() {\n      // navigate to forgot password page or open modal\n      // this.router.navigate(['/forgot-password']);\n      console.log('Forgot password clicked');\n    }\n    goToRegister() {\n      this.router.navigate(['/register']);\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 34,\n      vars: 14,\n      consts: [[1, \"login-fullscreen\"], [1, \"login-box\"], [1, \"title\"], [\"novalidate\", \"\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"username\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Enter email or mobile number\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"form-group\", \"password-row\"], [\"for\", \"password\"], [1, \"password-input\"], [\"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter password (6-10 chars)\", 3, \"type\"], [\"type\", \"button\", \"aria-label\", \"Toggle password\", 1, \"eye-btn\", 3, \"click\"], [\"class\", \"fa fa-eye\", 4, \"ngIf\"], [\"class\", \"fa fa-eye-slash\", 4, \"ngIf\"], [1, \"row\", \"small-row\"], [1, \"remember\"], [\"type\", \"checkbox\", \"formControlName\", \"rememberMe\"], [\"type\", \"button\", 1, \"link-button\", 3, \"click\"], [\"class\", \"error server-error\", 4, \"ngIf\"], [1, \"center\"], [\"type\", \"submit\", 1, \"btn-login\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"register\"], [3, \"click\"], [1, \"error\"], [1, \"fa\", \"fa-eye\"], [1, \"fa\", \"fa-eye-slash\"], [1, \"error\", \"server-error\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Sign In\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Email or Mobile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 3, 2, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n          i0.ɵɵtext(12, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 10);\n          i0.ɵɵelement(14, \"input\", 11);\n          i0.ɵɵelementStart(15, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n            return ctx.togglePassword();\n          });\n          i0.ɵɵtemplate(16, LoginComponent_i_16_Template, 1, 0, \"i\", 13)(17, LoginComponent_i_17_Template, 1, 0, \"i\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 4, 3, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 15)(20, \"label\", 16);\n          i0.ɵɵelement(21, \"input\", 17);\n          i0.ɵɵtext(22, \" Remember me \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n            return ctx.onForgotPassword();\n          });\n          i0.ɵɵtext(24, \"Forgot password?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(25, LoginComponent_div_25_Template, 2, 1, \"div\", 19);\n          i0.ɵɵelementStart(26, \"div\", 20)(27, \"button\", 21);\n          i0.ɵɵtemplate(28, LoginComponent_span_28_Template, 2, 0, \"span\", 22)(29, LoginComponent_span_29_Template, 2, 0, \"span\", 22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(30, \"div\", 23);\n          i0.ɵɵtext(31, \" Don't have an account? \");\n          i0.ɵɵelementStart(32, \"a\", 24);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_32_listener() {\n            return ctx.goToRegister();\n          });\n          i0.ɵɵtext(33, \"Register here\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"invalid\", ctx.username.invalid && (ctx.username.touched || ctx.username.dirty));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.username.invalid && (ctx.username.touched || ctx.username.dirty));\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"invalid\", ctx.password.invalid && (ctx.password.touched || ctx.password.dirty));\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.showPassword);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showPassword);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.touched || ctx.password.dirty));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.serverError);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".login-fullscreen[_ngcontent-%COMP%]{min-height:100vh;display:flex;align-items:center;justify-content:center;background:linear-gradient(135deg,#f0f4f8,#e9eef6);padding:20px}.login-box[_ngcontent-%COMP%]{width:100%;max-width:420px;background:#fff;border-radius:12px;box-shadow:0 8px 30px #141e3c14;padding:28px;box-sizing:border-box}.login-box[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{text-align:center;margin:0 0 20px;font-size:1.6rem;color:#1f2937}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{margin-bottom:16px}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;font-size:.9rem;margin-bottom:6px;color:#374151}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%], .login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%], .login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]{width:100%;padding:10px 12px;border-radius:8px;border:1px solid #d1d5db;font-size:.95rem;box-sizing:border-box;transition:border-color .15s ease}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=text].invalid[_ngcontent-%COMP%], .login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=password].invalid[_ngcontent-%COMP%], .login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=email].invalid[_ngcontent-%COMP%]{border-color:#f43f5e;outline:none}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus, .login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus, .login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]:focus{border-color:#3b82f6;outline:none;box-shadow:0 0 0 3px #3b82f614}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .error[_ngcontent-%COMP%]{margin-top:6px;font-size:.82rem;color:#dc2626}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .password-row[_ngcontent-%COMP%]   .password-input[_ngcontent-%COMP%]{display:flex;align-items:center;position:relative}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .password-row[_ngcontent-%COMP%]   .password-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding-right:44px}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .password-row[_ngcontent-%COMP%]   .password-input[_ngcontent-%COMP%]   .eye-btn[_ngcontent-%COMP%]{position:absolute;right:6px;top:50%;transform:translateY(-50%);border:none;background:transparent;cursor:pointer;font-size:1.1rem;padding:6px;line-height:1}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .small-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;margin-bottom:18px}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .small-row[_ngcontent-%COMP%]   .remember[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;font-size:.95rem}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .small-row[_ngcontent-%COMP%]   .remember[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{width:16px;height:16px}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .small-row[_ngcontent-%COMP%]   .link-button[_ngcontent-%COMP%]{background:transparent;border:none;color:#2563eb;cursor:pointer;font-size:.95rem;text-decoration:underline;padding:0}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .server-error[_ngcontent-%COMP%]{margin-bottom:12px;text-align:center}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .center[_ngcontent-%COMP%]{text-align:center;margin-top:4px}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .center[_ngcontent-%COMP%]   .btn-login[_ngcontent-%COMP%]{width:100%;padding:10px 14px;border-radius:10px;border:none;font-size:1rem;font-weight:600;cursor:pointer;background:linear-gradient(90deg,#2563eb,#3b82f6);color:#fff;box-shadow:0 8px 18px #3b82f62e;transition:transform .08s ease,box-shadow .08s ease}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .center[_ngcontent-%COMP%]   .btn-login[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed;transform:none;box-shadow:none}.login-box[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .center[_ngcontent-%COMP%]   .btn-login[_ngcontent-%COMP%]:active:not(:disabled){transform:translateY(1px)}.login-box[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]{text-align:center;margin-top:16px;font-size:.92rem}.login-box[_ngcontent-%COMP%]   .register[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#111827;font-weight:600;cursor:pointer;text-decoration:underline}@media (max-width: 480px){.login-box[_ngcontent-%COMP%]{padding:20px;border-radius:8px}}\"]\n    }));\n  }\n  _staticBlock();\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}