{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SellerDashboardComponent = class SellerDashboardComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.placeholderImage = 'assets/images/placeholder.png';\n    this.selectedImagePreview = null;\n    this.selectedFile = null;\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      type: ['', Validators.required],\n      availability: ['BOTH', Validators.required],\n      price: [null],\n      rentPrice: [null],\n      stock: [1],\n      description: [''],\n      sku: [''],\n      minStock: [0]\n    });\n  }\n  onImageSelected(event) {\n    const input = event.target;\n    if (input.files && input.files.length) {\n      this.selectedFile = input.files[0];\n      const reader = new FileReader();\n      reader.onload = () => this.selectedImagePreview = reader.result;\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n  onSubmit() {\n    if (this.productForm.invalid) {\n      this.productForm.markAllAsTouched();\n      return;\n    }\n    const payload = {\n      ...this.productForm.value\n    };\n    // TODO: Call product service to upload image then save product\n    console.log('Product payload', payload, this.selectedFile);\n  }\n};\nSellerDashboardComponent = __decorate([Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.scss']\n})], SellerDashboardComponent);\nexport { SellerDashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}